# Apply colours from pywal
cat ~/.cache/wal/sequences

# === zsh options === #
setopt autocd
setopt correct

# History options | Source: https://scriptingosx.com/2019/06/moving-to-zsh-part-3-shell-options/
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
SAVEHIST=5000
HISTSIZE=2000

# Share history across multiple zsh sessions
setopt share_history

# Append to history instead of overwriting
setopt append_history

# Adds commands as they are typed, not at shell exit
setopt inc_append_history

# Removes blank lines from history
setopt hist_reduce_blanks

# Show the substituted command in the prompt
setopt hist_verify

# Set emacs mode (what is changing it to vi mode?)
bindkey -e
autoload -U select-word-style
select-word-style bash

# Bind M-. and M-, | Source: https://stackoverflow.com/a/34861762/9327802
autoload -Uz copy-earlier-word
zle -N copy-earlier-word
# bindkey "^[." insert-last-word
bindkey "^[," copy-earlier-word

bindkey '^[[3~' delete-char
bindkey ';5D' backward-word
bindkey ';5C' forward-word

# Load cdr
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs

# Use dynamic directories e.g. ~[1], ~[2] etc.
add-zsh-hook -Uz zsh_directory_name zsh_directory_name_cdr

# Source: https://unix.stackexchange.com/a/214699
# Do menu-driven completion.
zstyle ':completion:*' menu selection

# Set completion style to menu
# zstyle ':completion:*:*:cdr:*:*' menu selection

# === zsh-autosuggestions === #
ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd completion)
ZSH_AUTOSUGGEST_USE_ASYNC=1

# === zinit === #
source ~/zsh-scripts/init_zinit.sh

# Load prompt
AGKOZAK_BLANK_LINES=1
AGKOZAK_LEFT_PROMPT_ONLY=1
AGKOZAK_PROMPT_CHAR=( '%F{magenta}❯%f' '%F{red}❯%f' '%F{magenta}❮%f' )
zinit load "agkozak/agkozak-zsh-prompt"

zinit load "MikeDacre/careful_rm"

# Load asynchronously
zinit wait lucid for \
  "MikeDacre/cdbk" \
  "MichaelAquilina/zsh-you-should-use" \
  "zsh-users/zsh-autosuggestions" \
  atinit'zpcompinit' "zdharma/fast-syntax-highlighting"

# Make careful_rm -c default for $HOME
[ ! -f "$HOME/.rm_recycle_home" ] && touch "$HOME/.rm_recycle_home"

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# # ex - archive extractor
# # usage: ex <file>
ex() {
  if [ -f $1 ]; then
    case $1 in
    *.tar.bz2) tar xjf $1 ;;
    *.tar.gz) tar xzf $1 ;;
    *.bz2) bunzip2 $1 ;;
    *.rar) unrar x $1 ;;
    *.gz) gunzip $1 ;;
    *.tar) tar xf $1 ;;
    *.tbz2) tar xjf $1 ;;
    *.tgz) tar xzf $1 ;;
    *.zip) unzip $1 ;;
    *.Z) uncompress $1 ;;
    *.7z) 7z x $1 ;;
    *) echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# === Activate scripts === #
scripts=(

  # Adds function for checking if given command is available. Required by debian-arch-bridge.sh
  ~/scripts/cmd_available.sh

  # Adds apt ↔ yay bridge [WIP]
  ~/scripts/debian-arch-bridge.sh

  # Private things. Don't upload!
  ~/scripts/private.sh

  # Open file in background without output using xdg-open
  ~/scripts/x.sh

  # Apply fzf shortcuts e.g. M-c — go to file
  ~/.fzf.zsh

  # Load aliases (file is compatible with both bash and zsh)
  ~/.aliases

  # Load the calc plugin
  ~/zsh-scripts/calc.sh

  # Load the zmv command
  ~/zsh-scripts/zmv.sh

  # Make ls colorful
  ~/zsh-scripts/set_ls_colors.sh

)
for script in ${scripts[@]}; do

  # -s: True if file exists and has a size greater than zero.
  # Source: https://www.gnu.org/software/bash/manual/html_node/Bash-Conditional-Expressions.html
  # if [ -s "$script" ]; then
    source "$script"
  # fi

done

# Color completion for some things.
# http://linuxshellaccount.blogspot.com/2008/12/color-completion-using-zsh-modules-on.html
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Fuck it
eval "$(thefuck --alias)"

# Init completions
zpcompinit
zinit cdreplay -q

# If I make another tool than needs to be at the end, then what?
if [ ! -d "/home/nawordar/.sdkman" ]; then
  return 0
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/nawordar/.sdkman"
[[ -s "/home/nawordar/.sdkman/bin/sdkman-init.sh" ]] && source "/home/nawordar/.sdkman/bin/sdkman-init.sh"
