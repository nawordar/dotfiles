alias cp="cp -i"     # confirm before overwriting something
alias df='df -h'     # human-readable sizes
alias free='free -m' # show sizes in MB
alias np='nano -w PKGBUILD'
alias mkdir="mkdir -p"
alias more=less

alias seti3="vim ~/.config/i3/config"

# Source: https://stackoverflow.com/a/677212/9327802
cmd_available() {
    command -v "$1" >/dev/null
}

# === Debian â™¥ Arch Linux === #
# If apt or yay do not exists, create appropriate functions
if ! cmd_available apt && cmd_available yay; then
    apt() {

        # Source: https://stackoverflow.com/a/59126818/9327802
        local all_args=("$@")
        local first_arg=$1
        local rest_args=("${all_args[@]:1}")

        case "$1" in
        install)
            yay -S "${rest_args[@]}"
            ;;
        search)
            yay -Ss "${rest_args[@]}"
            ;;
        update)
            echo "Not implemented"
            ;;
        *)
            echo "Not implemented"
            ;;
        esac
    }
fi

# apt aliases
if cmd_available apt; then
    alias sai='sudo apt install'
    alias sau='sudo apt update'
    alias sag='sudo apt upgrade'
fi

# Trash alias
alias rmt='gio trash'

# File managment
# alias ..='cd ..'
alias md=mkdir
alias rm.='YEET=`pwd` && cd .. && rmt "$YEET"'

# Make dir and slide in
mdcd() {
    mkdir $1 && cd $1
}

# Go to project directory
if [ -d "$HOME/Projects" ]; then
    alias cdp="cd $HOME/Projects"

elif [ -d "$HOME/projects" ]; then
    alias cdp="cd $HOME/projects"
fi

# hostnamectl | grep "Operating System" | gawk 'match($0, /: (.+)/, os) {print os[1]}'
